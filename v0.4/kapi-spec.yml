$schema: https://json-schema.org/draft-07/schema

oneOf:
- $ref: "#/definitions/document-api"
- $ref: "#/definitions/document-library"

definitions:

  # region KAPI Document Definitions
  # +--------------------------------------------------------------------------------------------------------------+ #
  # |                                                                                                              | #
  # |                                                                                                              | #
  # |   KAPI Document Definitions                                                                                  | #
  # |                                                                                                              | #
  # |                                                                                                              | #
  # +--------------------------------------------------------------------------------------------------------------+ #

  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Document Types                                                     | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  document-api:
    type: object
    properties:
      kapi:       { $ref: "#/definitions/seg-kapi-version" }
      type:       { enum: [ api ] }
      info:       { $ref: "#/definitions/seg-info" }
      imports:    { $ref: "#/definitions/seg-imports" }
      routes:     { $ref: "#/definitions/seg-routes" }
      components: { $ref: "#/definitions/seg-components" }
    required:
    - kapi
    - type
    - info
    - routes
    additionalProperties: false

  document-library:
    type: object
    properties:
      kapi:       { $ref: "#/definitions/seg-kapi-version" }
      type:       { enum: [ library ] }
      components: { $ref: "#/definitions/seg-components" }
    required:
    - kapi
    - type
    - components
    additionalProperties: false


  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Document Segments                                                  | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  # +----------------------------------------------------------------------+ #
  # |   Segment: KAPI Version                                              | #
  # +----------------------------------------------------------------------+ #

  seg-kapi-version:
    title: KAPI Version
    type: string
    enum: [ v0.4 ]

  # +----------------------------------------------------------------------+ #
  # |   Segment: Imports                                                   | #
  # +----------------------------------------------------------------------+ #

  seg-imports:
    title: Import Definitions
    description: |
      The imports block is where dependence on external files are declared.
    type: object
    properties:
      libraries:
        type: array
        items:
          oneOf:
          - $ref: "#/definitions/path-remote"
          - $ref: "#/definitions/path-local"
    additionalProperties: false

  path-local:
    title: Local Path
    description: |
      Path to a local file or file location relative to the location of the
      current document.
    type: string
    pattern: ^/?[^/\n]+(?:/[^/\n]+)*$
    examples:
    - /foo/bar
    - fizz/buzz
    - ../my/schema.yml

  path-remote:
    title: Remote URI
    description: |
      URI of a remote file.
    type: string
    pattern: ^[a-zA-Z][a-zA-Z\d\-+.]*://[\w\d\-.~:/?#\[\]@!$&'()*+,;=%]+$
    examples:
    - ftp://my.site/path/to/my/file
    - http://something/path/to?file=mine
    - https://foo:bar@fizz.buzz:8080/some_file

  # +----------------------------------------------------------------------+ #
  # |   Segment: Info                                                      | #
  # +----------------------------------------------------------------------+ #

  seg-info:
    type: object
    properties:
      title:
        title: API Title
        type: string
      summary:
        title: API Summary
        description: Brief, human friendly summary or tagline for the API.
        type: string
      description:
        title: API Description
        description: |
          Long description of the API and what it does.
          
          Markdown is supported.
        type: string
      version:
        title: API Version
        type:
        - string
        - number
    required:
    - title
    - version

  # +----------------------------------------------------------------------+ #
  # |   Segment: Routes                                                    | #
  # +----------------------------------------------------------------------+ #

  seg-routes:
    title: API Route Definitions
    description: Definitions of routes or endpoints available on this API.
    type: object
    minProperties: 1
    additionalProperties: false
    patternProperties:
      ^(?:/|(?:/[\d\w\-.]+)+)$:
        $ref: "#/definitions/route-no-params"
      ^(?:(?:/[\d\w\-.]+)*(?:/\{[\d\w\-]+\})+(?:/[\d\w\-.]+)*)*$:
        $ref: "#/definitions/route-with-params"

  # +----------------------------------------------------------------------+ #
  # |   Segment: Components                                                | #
  # +----------------------------------------------------------------------+ #

  seg-components:
    title: API Component Definitions
    type: object
    additionalProperties: false
    properties:
      responses:
        type: object
        patternProperties:
          ^\w[\w\d]*$:
            $ref: "#/definitions/response-handle"
        additionalProperties: false

      types:
        type: object
        patternProperties:
          ^\w[\w\d]*$:
            $ref: "#/definitions/type-definition"
        additionalProperties: false

      params:
        title: Reusable Parameter Definitions
        description: |
          Defines parameter objects that may be reused throughout the API
          definition.
          
          Parameter definitions may be URI and/or query parameters.
          
          A single definition may be used as either a URI or query parameter (or
          both) as the definition of both types is identical.
          
          Parameters defined here may choose to or choose not to define a `name`
          property.  Parameters without a `name` property will use the key under
          which they were defined as the value of their `name` parameter.
          
          For example, defining a parameter with no `name` field under the key
          `params.Foo` is equivalent to defining that parameter with the `name`
          field set to `Foo`.
        type: object
        patternProperties:
          ^\w[\w\d]*$:
            $ref: "#/definitions/parameter-def-block"
        additionalProperties: false

  # endregion KAPI Document Definitions


  # region KAPI HTTP Definitions
  # +--------------------------------------------------------------------------------------------------------------+ #
  # |                                                                                                              | #
  # |                                                                                                              | #
  # |   KAPI HTTP Definitions                                                                                      | #
  # |                                                                                                              | #
  # |                                                                                                              | #
  # +--------------------------------------------------------------------------------------------------------------+ #

  # region HTTP Routes
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   HTTP Routes                                                        | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  route-no-params:
    type: object
    properties:
      summary:
        title: Route Summary
        type: string
      description:
        title: Route Description
        type: string
      delete:
        title: Delete Requests
        $ref: "#/definitions/method-no-body"
      get:
        title: Get Requests
        $ref: "#/definitions/method-no-body"
      head:
        title: Head Requests
        $ref: "#/definitions/method-no-body"
      options:
        title: Options Requests
        $ref: "#/definitions/method-no-body"
      patch:
        title: Patch Requests
        $ref: "#/definitions/method-with-body"
      post:
        title: Post Requests
        $ref: "#/definitions/method-with-body"
      put:
        title: Put Requests
        $ref: "#/definitions/method-with-body"
    additionalProperties: false

  route-with-params:
    type: object
    properties:
      summary:
        title: Route Summary
        type: string
      description:
        title: Route Description
        type: string
      uri:
        title: Template URI Parameter Definitions
        description: |
          Required definition of the URI variables defined in the patterned URI.
        type: array
        items:
          $ref: "#/definitions/parameter-handle"
        minItems: 1
      delete:
        title: Delete Requests
        $ref: "#/definitions/method-no-body"
      get:
        title: Get Requests
        $ref: "#/definitions/method-no-body"
      head:
        title: Head Requests
        $ref: "#/definitions/method-no-body"
      options:
        title: Options Requests
        $ref: "#/definitions/method-no-body"
      patch:
        title: Patch Requests
        $ref: "#/definitions/method-with-body"
      post:
        title: Post Requests
        $ref: "#/definitions/method-with-body"
      put:
        title: Put Requests
        $ref: "#/definitions/method-with-body"
    required:
    - uri
    additionalProperties: false

  # endregion HTTP Routes

  # region URI Params
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   HTTP Methods                                                       | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  uri-param-def:
    title: URI Parameter
    type: object
    properties:
      summary:
        type: string
      description:
        type: string
      name:
        type: string
      value:
        $ref: "#/definitions/type-reference"
    required:
    - name
    - value

  # endregion URI Params

  # region HTTP Methods
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   HTTP Methods                                                       | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  method-no-body:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      request:     { $ref: "#/definitions/request-no-body" }
      responses:   { $ref: "#/definitions/response-status-map" }
    required:
    - responses

  method-with-body:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      request:     { $ref: "#/definitions/request-with-body" }
      responses:   { $ref: "#/definitions/response-status-map" }
    required:
    - request
    - responses

  # endregion HTTP Methods

  # region HTTP Requests
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   HTTP Requests                                                      | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  request-no-body:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      headers:     { $ref: "#/definitions/header-map" }
      query:       { $ref: "#/definitions/query-map" }

  request-with-body:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      headers:     { $ref: "#/definitions/header-map" }
      query:       { $ref: "#/definitions/query-map" }
      content:     { $ref: "#/definitions/request-mime-map" }

  request-mime-map:
    title: Request MimeType Map
    description: Map of media types to the request body definitions.
    type: object
    properties:
      application/gzip:         { $ref: "#/definitions/request-content" }
      application/json:         { $ref: "#/definitions/request-content" }
      application/ld+json:      { $ref: "#/definitions/request-content" }
      application/octet-stream: { $ref: "#/definitions/request-content" }
      application/xml:          { $ref: "#/definitions/request-content" }
      application/zip:          { $ref: "#/definitions/request-content" }
      text/csv:                 { $ref: "#/definitions/request-content" }
      text/html:                { $ref: "#/definitions/request-content" }
      text/plain:               { $ref: "#/definitions/request-content" }
    patternProperties:
      ^[a-z]+/[\w\d\-.+]+$: { $ref: "#/definitions/request-content" }

  request-content:
    title: Request Content
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      value:       { $ref: "#/definitions/type-reference" }
    required:
    - value

  # endregion HTTP Requests

  # region HTTP Responses
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   HTTP Responses                                                     | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  response-status-map:
    title: Response Status Map
    description: |
      Map of HTTP status codes to the responses that are returned with those
      codes.
    type: object
    properties:
      # 2xx Codes
      200:
        title: OK
        $ref: "#/definitions/response-handle"
      201:
        title: Created
        $ref: "#/definitions/response-handle"
      202:
        title: Accepted
        $ref: "#/definitions/response-handle"
      203:
        title: Non-Authoritative Information
        $ref: "#/definitions/response-handle"
      204:
        title: No Content
        $ref: "#/definitions/response-handle"
      205:
        title: Reset Content
        $ref: "#/definitions/response-handle"
      206:
        title: Partial Content
        $ref: "#/definitions/response-handle"
      207:
        title: Multi-Status
        $ref: "#/definitions/response-handle"
      208:
        title: Already Reported
        $ref: "#/definitions/response-handle"
      226:
        title: IM Used
        $ref: "#/definitions/response-handle"
      # 4xx Codes
      400:
        title: Bad Request
        $ref: "#/definitions/response-handle"
      401:
        title: Unauthorized
        $ref: "#/definitions/response-handle"
      402:
        title: Payment Required
        $ref: "#/definitions/response-handle"
      403:
        title: Forbidden
        $ref: "#/definitions/response-handle"
      404:
        title: Not Found
        $ref: "#/definitions/response-handle"
      405:
        title: Method Not Allowed
        $ref: "#/definitions/response-handle"
      406:
        title: Not Acceptable
        $ref: "#/definitions/response-handle"
      407:
        title: Proxy Authentication Required
        $ref: "#/definitions/response-handle"
      408:
        title: Request Timeout
        $ref: "#/definitions/response-handle"
      409:
        title: Conflict
        $ref: "#/definitions/response-handle"
      410:
        title: Gone
        $ref: "#/definitions/response-handle"
      411:
        title: Length Required
        $ref: "#/definitions/response-handle"
      412:
        title: Precondition Failed
        $ref: "#/definitions/response-handle"
      413:
        title: Payload Too Large
        $ref: "#/definitions/response-handle"
      414:
        title: URI Too Long
        $ref: "#/definitions/response-handle"
      415:
        title: Unsupported Media Type
        $ref: "#/definitions/response-handle"
      416:
        title: Range Not Satisfiable
        $ref: "#/definitions/response-handle"
      417:
        title: Expectation Failed
        $ref: "#/definitions/response-handle"
      418:
        title: I'm a Teapot
        $ref: "#/definitions/response-handle"
      419:
        title: Page Expired
        $ref: "#/definitions/response-handle"
      420:
        title: Enhance Your Calm
        $ref: "#/definitions/response-handle"
      421:
        title: Misdirected Request
        $ref: "#/definitions/response-handle"
      422:
        title: Unprocessable Entity
        $ref: "#/definitions/response-handle"
      423:
        title: Locked
        $ref: "#/definitions/response-handle"
      424:
        title: Failed Dependency
        $ref: "#/definitions/response-handle"
      425:
        title: Too Early
        $ref: "#/definitions/response-handle"
      426:
        title: Upgrade Required
        $ref: "#/definitions/response-handle"
      428:
        title: Precondition Required
        $ref: "#/definitions/response-handle"
      429:
        title: Too Many Requests
        $ref: "#/definitions/response-handle"
      430:
        title: Request Header Fields Too Large
        $ref: "#/definitions/response-handle"
      431:
        title: Request Header Fields Too Large
        $ref: "#/definitions/response-handle"
      440:
        title: Login Time-out
        $ref: "#/definitions/response-handle"
      449:
        title: Retry With
        $ref: "#/definitions/response-handle"
      450:
        title: Blocked by Windows Parental Controls
        $ref: "#/definitions/response-handle"
      451:
        title: Unavailable For Legal Reasons
        $ref: "#/definitions/response-handle"
      498:
        title: Invalid Token
        $ref: "#/definitions/response-handle"
      499:
        title: Token Required
        $ref: "#/definitions/response-handle"
      # 5xx Codes
      500:
        title: Internal Server Error
        $ref: "#/definitions/response-handle"
      501:
        title: Not Implemented
        $ref: "#/definitions/response-handle"
      502:
        title: Bad Gateway
        $ref: "#/definitions/response-handle"
      503:
        title: Service Unavailable
        $ref: "#/definitions/response-handle"
      504:
        title: Gateway Timeout
        $ref: "#/definitions/response-handle"
      505:
        title: HTTP Version Not Supported
        $ref: "#/definitions/response-handle"
      506:
        title: Variante Also Negotiates
        $ref: "#/definitions/response-handle"
      507:
        title: Insufficient Storage
        $ref: "#/definitions/response-handle"
      508:
        title: Loop Detected
        $ref: "#/definitions/response-handle"
      509:
        title: Bandwidth Limit Exceeded
        $ref: "#/definitions/response-handle"
      510:
        title: Not Extended
        $ref: "#/definitions/response-handle"
      511:
        title: Network Authentication Required
        $ref: "#/definitions/response-handle"
      529:
        title: Site is Overloaded
        $ref: "#/definitions/response-handle"
      530:
        title: Site is Frozen
        $ref: "#/definitions/response-handle"
      598:
        title: Network Read Timeout Error
        $ref: "#/definitions/response-handle"
      599:
        title: Network Connect Timeout Error
        $ref: "#/definitions/response-handle"
    patternProperties:
      ^[1-5]\d\d$:
        $ref: "#/definitions/response-handle"
    minProperties: 1
    additionalProperties: false

  response-mime-map:
    title: Response MimeType Map
    description: Map of media types to the response body definitions.
    type: object
    properties:
      application/gzip:         { $ref: "#/definitions/response-content" }
      application/json:         { $ref: "#/definitions/response-content" }
      application/ld+json:      { $ref: "#/definitions/response-content" }
      application/octet-stream: { $ref: "#/definitions/response-content" }
      application/xml:          { $ref: "#/definitions/response-content" }
      application/zip:          { $ref: "#/definitions/response-content" }
      text/csv:                 { $ref: "#/definitions/response-content" }
      text/html:                { $ref: "#/definitions/response-content" }
      text/plain:               { $ref: "#/definitions/response-content" }
    patternProperties:
      ^[a-z]+/[\w\d\-.+]+$: { $ref: "#/definitions/response-content" }
    additionalProperties: false

  response-handle:
    oneOf:
    - $ref: "#/definitions/response-ref"
    - $ref: "#/definitions/response-def"

  response-ref:
    type: string
    pattern: ^responses\.\w[\w\d]*$

  response-def:
    title: Response
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      headers:     { $ref: "#/definitions/header-map" }
      content:     { $ref: "#/definitions/response-mime-map" }
    additionalProperties: false

  response-content:
    title: Response Content
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      value:       { $ref: "#/definitions/type-reference" }
    required:
    - value
    additionalProperties: false

  # endregion HTTP Responses

  # +----------------------------------------------------------------------+ #
  # |  Queries & Headers                                                   | #
  # +----------------------------------------------------------------------+ #

  query-map:
    title: Query Parameters
    type: array
    items:
      $ref: "#/definitions/parameter-handle"

  header-map:
    title: Headers
    type: array
    items:
      type: object
      properties:
        header:      { type: string }
        summary:     { type: string }
        description: { type: string }
        value:       { $ref: "#/definitions/type-reference" }
      required:
      - header
      - value

  # region Parameters
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Parameters (URI & Query)                                           | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  # +----------------------------------------------------------------------+ #
  # |   Inline Parameter Definition                                        | #
  # +----------------------------------------------------------------------+ #

  parameter-def-inline:
    title: Inline Parameter Definition
    description: |
      Parameter defined in the parameter listing block for either URI parameters
      on a route or query parameters on a request.
      
      This differs from the parameter block definition in that the `name` field
      is required here whereas the `name` field is optional in the parameter
      block definition.
    type: object
    properties:
      name:
        title: Parameter Name
        description: |
          This is the name of the parameter as it appears in the URI template or
          the request query string.
          
          **Examples**
          
          Parameterized URI: `/foo/{bar}`
          
          For this URI template, to define the parameter for the template
          variable `{bar}`, the name of the defined parameter MUST be `bar`.
          
          
          URI with query: /foo/bar?fizz=buzz
          
          For this URI example, to define the parameter for the query param
          `fizz`, the name of the defined parameter MUST be `fizz`.
        type: string
      summary:
        title: Parameter Summary
        description: Short summary describing the parameter.
        type: string
      description:
        title: Parameter Description
        description: |
          Long description or help text describing the parameter and its usage.
        type: string
      value:
        title: Parameter Value Type
        description: Defines the type of data the parameter accepts.
        $ref: "#/definitions/type-reference"
    required:
    - name
    - value
    additionalProperties: false

  # +----------------------------------------------------------------------+ #
  # |   Params Block Parameter Definition                                  | #
  # +----------------------------------------------------------------------+ #

  parameter-def-block:
    title: Block Parameter Definition
    description: |
      Parameter defined in the `components.params` block of the KAPI document
      for either URI parameters on a route or query parameters on a request.
      
      This differs from the inline parameter definition in that the `name` field
      is optional here whereas the `name` field is required in the inline
      definition.
      
      The `name` field is optional here as the name, if absent, will be taken
      from the key under which the parameter was defined in the
      `components.params` block.
      
      For example, given the following definition, the name property of the
      defined parameter will be `foo`.
      
      ```
      components:
        params:
          foo:
            value: string
      ```
    type: object
    properties:
      name:
        title: Parameter Name
        description: |
          This is the name of the parameter as it appears in the URI template or
          the request query string.
          
          If this property is absent, the name of the key under which this
          parameter was defined will be used as the name.
          
          **Examples**
          
          Parameterized URI: `/foo/{bar}`
          
          For this URI template, to define the parameter for the template
          variable `{bar}`, the name of the defined parameter MUST be `bar`.
          
          
          URI with query: /foo/bar?fizz=buzz
          
          For this URI example, to define the parameter for the query param
          `fizz`, the name of the defined parameter MUST be `fizz`.
        type: string
      summary:
        title: Parameter Summary
        description: Short summary describing the parameter.
        type: string
      description:
        title: Parameter Description
        description: |
          Long description or help text describing the parameter and its usage.
        type: string
      value:
        title: Parameter Value Type
        description: Defines the type of data the parameter accepts.
        $ref: "#/definitions/type-reference"
    required:
    - value
    additionalProperties: false

  # +----------------------------------------------------------------------+ #
  # |   Parameter Referencing                                              | #
  # +----------------------------------------------------------------------+ #

  parameter-handle:
    title: Parameter Handle
    description: Handle on a parameter reference or inline definition.
    oneOf:
    - $ref: "#/definitions/parameter-reference"
    - $ref: "#/definitions/parameter-def-inline"

  parameter-reference:
    title: Parameter Reference
    description: |
      "params" namespaced name of a parameter defined in the `components.params`
      block of the KAPI document.
      
      This name MUST point to an existing parameter definition.
      
      For example, to use the reference `params.Foo`, a parameter definition
      MUST exist at the YAML path `#/components/params/Foo` (or
      `components.params.Foo`).
      
      Example Document Fragment:
      ```yaml
      routes:
        /{foo}:
          uri:
            - params.Foo
      components:
        params:
          Foo:
            name: foo
            type: string
      ```
    type: string
    pattern: ^params\.\w[^/#?]+$

  # endregion Parameters

  # endregion KAPI HTTP Definitions

  # region KAPI Types Schemata
  # +--------------------------------------------------------------------------------------------------------------+ #
  # |                                                                                                              | #
  # |                                                                                                              | #
  # |   KAPI Types Schemata                                                                                        | #
  # |                                                                                                              | #
  # |                                                                                                              | #
  # +--------------------------------------------------------------------------------------------------------------+ #

  # region Type Meta
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type Meta                                                          | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  type-name-ref:
    type: string
    pattern: ^types\.\w[\w\d]*$
    examples:
    - types.RequestID
    - types.my_type

  # endregion Type Meta

  # region Type Referencing
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type Referencing                                                   | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  type-reference:
    oneOf:
    - $ref: "#/definitions/type-ref-inline"
    - $ref: "#/definitions/type-ref-expanded"

  type-ref-inline:
    oneOf:
    - $ref: "#/definitions/array-ref-inline"
    - $ref: "#/definitions/boolean-ref-inline"
    - $ref: "#/definitions/custom-ref-inline"
    - $ref: "#/definitions/date-ref-inline"
    - $ref: "#/definitions/decimal-ref-inline"
    - $ref: "#/definitions/integer-ref-inline"
    - $ref: "#/definitions/list-ref-inline"
    - $ref: "#/definitions/map-ref-inline"
    - $ref: "#/definitions/object-ref-inline"
    - $ref: "#/definitions/set-ref-inline"
    - $ref: "#/definitions/string-ref-inline"

  type-ref-expanded:
    oneOf:
    - $ref: "#/definitions/array-ref-expanded"
    - $ref: "#/definitions/boolean-ref-expanded"
    - $ref: "#/definitions/custom-ref-expanded"
    - $ref: "#/definitions/date-ref-expanded"
    - $ref: "#/definitions/decimal-ref-expanded"
    - $ref: "#/definitions/integer-ref-expanded"
    - $ref: "#/definitions/list-ref-expanded"
    - $ref: "#/definitions/map-ref-expanded"
    - $ref: "#/definitions/object-ref-expanded"
    - $ref: "#/definitions/set-ref-expanded"
    - $ref: "#/definitions/string-ref-expanded"

  # endregion Type Referencing

  # region Type Defining
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type Defining                                                      | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  type-definition:
    oneOf:
    - $ref: "#/definitions/boolean-def"
    - $ref: "#/definitions/custom-def"
    - $ref: "#/definitions/decimal-def"
    - $ref: "#/definitions/enum-def"
    - $ref: "#/definitions/integer-def"
    - $ref: "#/definitions/string-def"

  # endregion Type Defining

  # region Type: Array
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Array                                                        | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  array-base:
    type: object
    properties:
      type:        { enum: [ array ] }
      summary:     { type: string }
      description: { type: string }
      values:      { $ref: "#/definitions/type-ref-inline" }
    required:
    - type
    - values

  array-ref-inline:
    title: Inline Set Type Reference
    type: string
    pattern: ^array\[(\w[\w\d\[\], ?]*\??)\]\??$

  array-ref-expanded:
    title: Expanded Set Type Reference
    allOf:
    - $ref: "#/definitions/array-base"
    - properties:
        nullable:
          type: boolean
          default: false

  array-property:
    title: Set Object Property
    allOf:
    - $ref: "#/definitions/array-base"
    - properties:
        nullable:
          type: boolean
          default: false

  array-example:
    type: object
    properties:
      value:       { type: array }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  # endregion Type: Array

  # region Type: Boolean
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Boolean                                                      | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  boolean-base:
    description: |
      Properties common to all boolean type definitions or expanded boolean type
      references.
    type: object
    properties:
      type:        { enum: [ boolean ] }
      summary:     { type: string }
      description: { type: string }
      example:     { type: boolean }
      examples:
        type: array
        items: { $ref: "#/definitions/example-boolean" }
    required:
    - type

  boolean-def:
    title: Boolean Based New-Type
    $ref: "#/definitions/boolean-base"

  boolean-ref-inline:
    enum:
    - boolean
    - boolean?

  boolean-ref-expanded:
    allOf:
    - $ref: "#/definitions/boolean-base"
    - properties:
        default:
          type: boolean
        nullable:
          type: boolean
          default: false

  boolean-property:
    allOf:
    - $ref: "#/definitions/boolean-base"
    - properties:
        default:
          type: boolean
        nullable:
          type: boolean
          default: false

  example-boolean:
    type: object
    properties:
      value:       { type: boolean }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  # endregion Type: Boolean

  # region Type: Custom
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Custom                                                       | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  custom-def:
    type: object
    properties:
      summary:
        title: Custom Object Summary
        type: string
      description:
        title: Custom Object Description
        type: string
      type: { enum: [ object ] }
      extends:
        title: Parent Type
        description: |
          Defines the object type that this new type definition extends.
          
          The type declared here must be the name of another custom object
          definition.
          
          Custom object types cannot extend new-types wrapping scalar values.
        $ref: "#/definitions/custom-ref-inline"
      typeHintField:
        title: Polymorphic Type Hint Field
        description: |
          Field to use as the type hint or discriminator when deserializing
          subtypes of a parent type definition referencing only the parent type.
        type: string
        pattern: ^[a-z][\w\d]*$
      typeHintValue:
        title: Polymorphic Type Hint Value
        type:
        - boolean
        - number
        - string
      properties:
        title: Object Properties
        description: |
          Property definitions for the custom object being defined.
        type: object
        minProperties: 1
        additionalProperties: false
        patternProperties:
          ^[a-z][\w\d]*$:
            $ref: "#/definitions/type-reference"
      example: { type: object }
      examples:
        type: array
        items: { $ref: "#/definitions/custom-example"}

  custom-ref-inline:
    $ref: "#/definitions/type-name-ref"

  custom-ref-expanded:
    type: object
    properties:
      type:    { $ref: "#/definitions/custom-ref-inline" }
      example: { type: object }
      examples:
        type: array
        items: { $ref: "#/definitions/custom-example"}

  custom-example:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      value:       { type: object }
    required:
    - value

  # endregion Type: Custom

  # region Type: Date
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |    Type: Date                                                        | #
  # |                                                                      | #
  # |  Timestamp/date-time representation.                                 | #
  # |                                                                      | #
  # |  Valid formats:                                                      | #
  # |                                                                      | #
  # |  - date        : 2020-11-01                                          | #
  # |                                                                      | #
  # |  - time        : 03:00:00.000                                        | #
  # |                : 03:00:00                                            | #
  # |                                                                      | #
  # |  - datetime    : 2020-11-01T03:00:00.000                             | #
  # |                : 2020-11-01 03:00:00.000                             | #
  # |                : 2020-11-01T03:00:00                                 | #
  # |                : 2020-11-01 03:00:00                                 | #
  # |                                                                      | #
  # |  - datetime-tz : 2020-11-01T03:00:00.000Z                            | #
  # |                : 2020-11-01 03:00:00.000Z                            | #
  # |                : 2020-11-01T03:00:00.000-05:00                       | #
  # |                : 2020-11-01 03:00:00.000-05:00                       | #
  # |                : 2020-11-01T03:00:00Z                                | #
  # |                : 2020-11-01 03:00:00Z                                | #
  # |                : 2020-11-01T03:00:00-05:00                           | #
  # |                : 2020-11-01 03:00:00-05:00                           | #
  # |                                                                      | #
  # |  Default Format: datetime-tz                                         | #
  # +----------------------------------------------------------------------+ #

  # region Date Type: Base
  # +----------------------------------------------------------------------+ #
  # |   Date Type: Base                                                    | #
  # +----------------------------------------------------------------------+ #

  date-base:
    type: object
    properties:
      type: { enum: [ date ] }
      summary: { type: string }
      description: { type: string }
    required:
    - type

  date-ref-inline:
    title: Inline Date Type Reference
    enum:
    - date
    - date?

  date-ref-expanded:
    oneOf:
    - $ref: "#/definitions/date-ref-expanded-date"
    - $ref: "#/definitions/date-ref-expanded-time"
    - $ref: "#/definitions/date-ref-expanded-datetime"
    - $ref: "#/definitions/date-ref-expanded-datetime-tz"

  # endregion

  # region Date Type: Date
  # +----------------------------------------------------------------------+ #
  # |   Date Type: Date                                                    | #
  # +----------------------------------------------------------------------+ #

  date-base-date:
    allOf:
    - $ref: "#/definitions/date-base"
    - properties:
        format: { enum: [ date ] }
        example: { $ref: "#/definitions/date-string-date" }
        examples:
          type: array
          items: { $ref: "#/definitions/date-example-date" }

  date-ref-expanded-date:
    title: Expanded Date Type Reference
    allOf:
    - $ref: "#/definitions/date-base-date"
    - properties:
        default: { $ref: "#/definitions/date-string-date" }
        nullable:
          type: boolean
          default: false

  date-example-date:
    type: object
    properties:
      value:       { $ref: "#/definitions/date-string-date" }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  date-string-date:
    title: Date String
    type: string
    pattern: ^\d{4}-\d{2}-\d{2}$
    examples:
    - 2002-10-02

  # endregion

  # region Date Type: Time
  # +----------------------------------------------------------------------+ #
  # |   Date Type: Time                                                    | #
  # +----------------------------------------------------------------------+ #

  date-base-time:
    allOf:
    - $ref: "#/definitions/date-base"
    - properties:
        format: { enum: [ time ] }
        example: { $ref: "#/definitions/date-string-time" }
        examples:
          type: array
          items: { $ref: "#/definitions/date-example-time" }

  date-ref-expanded-time:
    title: Expanded Date Type Reference
    allOf:
    - $ref: "#/definitions/date-base-time"
    - properties:
        default: { $ref: "#/definitions/date-string-time" }
        nullable:
          type: boolean
          default: false

  date-example-time:
    type: object
    properties:
      value:       { $ref: "#/definitions/date-string-time" }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  date-string-time:
    title: Time String
    type: string
    pattern: ^\d{2}:\d{2}:\d{2}(?:\.\d+)?$
    examples:
    - 15:00:00.05
    - 15:00:00

  # endregion

  # region Date Type: Datetime
  # +----------------------------------------------------------------------+ #
  # |   Date Type: Datetime                                                | #
  # +----------------------------------------------------------------------+ #

  date-base-datetime:
    allOf:
    - $ref: "#/definitions/date-base"
    - properties:
        format: { enum: [ datetime ] }
        example: { $ref: "#/definitions/date-string-datetime" }
        examples:
          type: array
          items: { $ref: "#/definitions/date-example-datetime" }

  date-ref-expanded-datetime:
    title: Expanded Date Type Reference
    allOf:
    - $ref: "#/definitions/date-base-datetime"
    - properties:
        default: { $ref: "#/definitions/date-string-datetime" }
        nullable:
          type: boolean
          default: false

  date-example-datetime:
    type: object
    properties:
      value:       { $ref: "#/definitions/date-string-datetime" }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  date-string-datetime:
    title: Datetime String Without Timezone
    type: string
    pattern: ^\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}(?:\.\d+)?$
    examples:
    - 2002-10-02T10:00:00
    - 2002-10-02T15:00:00.05
    - 2002-10-02 10:00:00
    - 2002-10-02 15:00:00.05

  # endregion

  # region Date Type: Datetime with Timezone
  # +----------------------------------------------------------------------+ #
  # |   Date Type: Datetime with Timezone                                  | #
  # +----------------------------------------------------------------------+ #

  date-base-datetime-tz:
    allOf:
    - $ref: "#/definitions/date-base"
    - properties:
        format: { enum: [ datetime-tz ] }
        example: { $ref: "#/definitions/date-string-datetime-tz" }
        examples:
          type: array
          items: { $ref: "#/definitions/date-example-datetime-tz" }

  date-ref-expanded-datetime-tz:
    title: Expanded Date Type Reference
    allOf:
    - $ref: "#/definitions/date-base-datetime-tz"
    - properties:
        default: { $ref: "#/definitions/date-string-datetime-tz" }
        nullable:
          type: boolean
          default: false

  date-example-datetime-tz:
    type: object
    properties:
      value:       { $ref: "#/definitions/date-string-datetime-tz" }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  date-string-datetime-tz:
    title: Datetime String With Timezone
    type: string
    pattern: ^\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[-+]\d{2}:\d{2})$
    examples:
    - 2002-10-02T10:00:00-05:00
    - 2002-10-02T15:00:00Z
    - 2002-10-02T15:00:00.05Z
    - 2002-10-02 10:00:00+05:00
    - 2002-10-02 15:00:00Z
    - 2002-10-02 15:00:00.05Z

  # endregion

  # endregion Type: Date

  # region Type: Decimal
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Decimal                                                      | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  decimal-base:
    description: |
      Properties common to all decimal type definitions or expanded decimal type
      references.
    type: object
    properties:
      type: { enum: [ decimal ] }
      format: { $ref: "#/definitions/decimal-format" }
      summary:
        title: Type Summary
        description: Short description of the type being defined.
        type: string
      description:
        title: Type Description
        description: Long description or help text for the type being defined.
        type: string
      iMin:    { type: number }
      iMax:    { type: number }
      eMin:    { type: number }
      eMax:    { type: number }
      example: { type: number }
      examples:
        type:  array
        items: { $ref: "#/definitions/decimal-example" }
    required:
    - type

  decimal-def:
    title: Decimal Based New-Type
    $ref: "#/definitions/decimal-base"

  decimal-ref-inline:
    enum:
    - decimal
    - decimal?

  decimal-ref-expanded:
    title: Expanded Decimal Type Reference
    allOf:
    - $ref: "#/definitions/decimal-base"
    - properties:
        default: { type: number }
        nullable:
          type: boolean
          default: false

  decimal-property:
    title: Decimal Object Property
    allOf:
    - $ref: "#/definitions/decimal-base"
    - properties:
        default: { type: number }
        nullable:
          type: boolean
          default: false

  decimal-example:
    type: object
    properties:
      value:       { type: number }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  decimal-format:
    title: Decimal Format
    enum:
    - float32
    - float64
    - big
    default: float64


  # endregion Type: Decimal

  # region Type: Enum
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Enum                                                         | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  # +----------------------------------------------------------------------+ #
  # |   Enum: Base                                                         | #
  # +----------------------------------------------------------------------+ #

  enum-value-name:
    type: string
    pattern: ^[A-Z][\w\d]*$

  enum-def:
    oneOf:
    - $ref: "#/definitions/enum-def-plain"
    - $ref: "#/definitions/enum-def-boolean"
    - $ref: "#/definitions/enum-def-decimal"
    - $ref: "#/definitions/enum-def-integer"
    - $ref: "#/definitions/enum-def-string"

  enum-example:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      value:       { $ref: "#/definitions/enum-value-name" }
    required:
    - value

  # +----------------------------------------------------------------------+ #
  # |   Enum: Plain                                                        | #
  # +----------------------------------------------------------------------+ #

  enum-def-plain:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      type:        { enum: [ enum ] }
      wraps:       { enum: [ none ] }
      values:
        type: array
        items: { $ref: "#/definitions/enum-value-name" }
        minItems: 1
      example: { $ref: "#/definitions/enum-value-name" }
      examples:
        type: array
        items: { $ref: "#/definitions/enum-example" }
    required:
    - type
    - wraps
    - values
    additionalProperties: false

  # +----------------------------------------------------------------------+ #
  # |   Enum: Boolean                                                      | #
  # +----------------------------------------------------------------------+ #

  enum-def-boolean:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      type:        { enum: [ enum ] }
      wraps:       { enum: [ boolean ] }
      values:
        type: object
        patternProperties:
          ^[A-Z][\w\d]*$: { type: boolean }
        minProperties: 1
      example: { $ref: "#/definitions/enum-value-name" }
      examples:
        type: array
        items: { $ref: "#/definitions/enum-example" }
    required:
    - type
    - wraps
    - values
    additionalProperties: false

  # +----------------------------------------------------------------------+ #
  # |   Enum: Decimal                                                      | #
  # +----------------------------------------------------------------------+ #

  enum-def-decimal:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      type:        { enum: [ enum ] }
      wraps:       { enum: [ decimal ] }
      format:      { $ref: "#/definitions/decimal-format" }
      values:
        type: object
        patternProperties:
          ^[A-Z][\w\d]*$: { type: number }
        minProperties: 1
      example: { $ref: "#/definitions/enum-value-name" }
      examples:
        type: array
        items: { $ref: "#/definitions/enum-example" }
    required:
    - type
    - wraps
    - values
    additionalProperties: false

  # +----------------------------------------------------------------------+ #
  # |   Enum: Integer                                                      | #
  # +----------------------------------------------------------------------+ #

  enum-def-integer:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      type:        { enum: [ enum ] }
      wraps:       { enum: [ integer ] }
      format:      { $ref: "#/definitions/integer-format" }
      values:
        type: object
        patternProperties:
          ^[A-Z][\w\d]*$: { type: integer }
        minProperties: 1
      example: { $ref: "#/definitions/enum-value-name" }
      examples:
        type: array
        items: { $ref: "#/definitions/enum-example" }
    required:
    - type
    - wraps
    - values
    additionalProperties: false

  # +----------------------------------------------------------------------+ #
  # |   Enum: String                                                       | #
  # +----------------------------------------------------------------------+ #

  enum-def-string:
    type: object
    properties:
      summary:     { type: string }
      description: { type: string }
      type:        { enum: [ enum ] }
      wraps:       { enum: [ string ] }
      values:
        type: object
        patternProperties:
          ^[A-Z][\w\d]*$: { type: string }
        minProperties: 1
      example: { $ref: "#/definitions/enum-value-name" }
      examples:
        type: array
        items: { $ref: "#/definitions/enum-example" }
    required:
    - type
    - wraps
    - values
    additionalProperties: false

  # endregion Type: Enum

  # region Type: Integer
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Integer                                                      | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  integer-base:
    description: |
      Properties common to all integer type definitions or expanded integer type
      references.
    type: object
    properties:
      type: { enum: [ integer ] }
      format: { $ref: "#/definitions/integer-format" }
      summary:
        title: Type Summary
        description: Short description of the type being defined.
        type: string
      description:
        title: Type Description
        description: Long description or help text for the type being defined.
        type: string
      iMin:    { type: integer }
      iMax:    { type: integer }
      eMin:    { type: integer }
      eMax:    { type: integer }
      example: { type: integer }
      examples:
        type:  array
        items: { $ref: "#/definitions/integer-example" }
    required:
    - type

  integer-def:
    title: Integer Based New-Type
    $ref: "#/definitions/integer-base"

  integer-ref-inline:
    enum:
    - integer
    - integer?

  integer-ref-expanded:
    title: Extended Integer Type Reference
    allOf:
    - $ref: "#/definitions/integer-base"
    - properties:
        default: { type: integer }
        nullable:
          type: boolean
          default: false

  integer-property:
    title: Integer Object Property
    allOf:
    - $ref: "#/definitions/integer-base"
    - properties:
        default: { type: integer }
        nullable:
          type: boolean
          default: false

  integer-example:
    type: object
    properties:
      value:       { type: integer }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  integer-format:
    title: Integer Format
    enum:
    - int8
    - int16
    - int32
    - int64
    - uint8
    - uint16
    - uint32
    - uint64
    - big
    default: int32

  # endregion Type: Integer

  # region Type: List
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: List                                                         | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  list-base:
    type: object
    properties:
      type:        { enum: [ list ] }
      summary:     { type: string }
      description: { type: string }
      values:      { $ref: "#/definitions/type-ref-inline" }
    required:
    - type
    - values

  list-ref-inline:
    title: Inline Set Type Reference
    type: string
    pattern: ^list\[(\w[\w\d\[\], ?]*\??)\]\??$

  list-ref-expanded:
    title: Expanded Set Type Reference
    allOf:
    - $ref: "#/definitions/list-base"
    - properties:
        nullable:
          type: boolean
          default: false

  list-property:
    title: Set Object Property
    allOf:
    - $ref: "#/definitions/list-base"
    - properties:
        nullable:
          type: boolean
          default: false

  list-example:
    type: object
    properties:
      value:       { type: array }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  # endregion Type: List

  # region Type: Map
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Map                                                          | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  map-base:
    type: object
    properties:
      type:        { enum: [ list ] }
      summary:     { type: string }
      description: { type: string }
      keys:        { $ref: "#/definitions/type-ref-inline" }
      values:      { $ref: "#/definitions/type-ref-inline" }
    required:
    - type
    - values

  map-ref-inline:
    title: Inline Set Type Reference
    type: string
    pattern: ^map\[(\w[\w\d\[\], ?]*), ?(\w[\w\d\[\], ?]*\??)\]\??$

  map-ref-expanded:
    title: Expanded Set Type Reference
    allOf:
    - $ref: "#/definitions/map-base"
    - properties:
        nullable:
          type: boolean
          default: false

  map-property:
    title: Set Object Property
    allOf:
    - $ref: "#/definitions/map-base"
    - properties:
        nullable:
          type: boolean
          default: false

  map-example:
    type: object
    properties:
      value:       { type: array }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  # endregion Type: Map

  # region Type: Object
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Object                                                       | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  object-ref-inline:
    title: Inline Untyped Object Reference
    enum:
    - any
    - any?
    - object
    - object?

  object-ref-expanded:
    title: Expanded Untyped Object Reference
    type: object
    properties:
      type: { enum: [ object, any ] }
      nullable:
        type: boolean
        default: false
      example: {}
      examples:
        type: array
        items:
          $ref: "#/definitions/object-example"
    required:
    - type

  object-example:
    type: object
    properties:
      summary: { type: string }
      description: { type: string }
      value: {}
    required:
    - value

  # endregion Type: Object

  # region Type: Set
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: Set                                                          | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  set-base:
    type: object
    properties:
      type:        { enum: [ set ] }
      summary:     { type: string }
      description: { type: string }
      values:      { $ref: "#/definitions/type-ref-inline" }
    required:
    - type
    - values

  set-ref-inline:
    title: Inline Set Type Reference
    type: string
    pattern: ^set\[(\w[\w\d\[\], ?]*\??)\]\??$

  set-ref-expanded:
    title: Expanded Set Type Reference
    allOf:
    - $ref: "#/definitions/set-base"
    - properties:
        nullable:
          type: boolean
          default: false

  set-property:
    title: Set Object Property
    allOf:
    - $ref: "#/definitions/set-base"
    - properties:
        nullable:
          type: boolean
          default: false

  set-example:
    type: object
    properties:
      value:       { type: array }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  # endregion Type: Set

  # region Type: String
  # +----------------------------------------------------------------------+ #
  # |                                                                      | #
  # |   Type: String                                                       | #
  # |                                                                      | #
  # +----------------------------------------------------------------------+ #

  string-base:
    description: |
      Properties common to all string type definitions or expanded string type
      references.
    type: object
    properties:
      type:        { enum: [ string ] }
      summary:     { type: string }
      description: { type: string }
      minLength:
        type: integer
        minimum: 0
        default: 0
      maxLength:
        type: integer
        minimum: 0
      pattern:
        type: string
        format: regex
      example: { type: string }
      examples:
        type: array
        items: { $ref: "#/definitions/string-example" }
    required:
    - type

  string-ref-inline:
    enum:
    - string
    - string?

  string-ref-expanded:
    title: Expanded String Type Reference
    allOf:
    - $ref: "#/definitions/string-base"
    - properties:
        default: { type: string }
        nullable:
          type: boolean
          default: false

  string-def:
    title: String Based New-Type
    $ref: "#/definitions/string-base"

  string-property:
    title: String Object Property
    allOf:
    - $ref: "#/definitions/string-base"
    - properties:
        default: { type: string }
        nullable:
          type: boolean
          default: false

  string-example:
    type: object
    properties:
      value:       { type: string }
      summary:     { type: string }
      description: { type: string }
    required:
    - value

  # endregion Type: String

  # endregion KAPI Types Schemata
